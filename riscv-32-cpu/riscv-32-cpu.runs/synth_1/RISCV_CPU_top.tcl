# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_param synth.incrementalSynthesisCache C:/Users/23526/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-31328-Dell-G15-WJJ/incrSyn
set_msg_config -id {Common 17-41} -limit 10000000
set_msg_config -id {Synth 8-256} -limit 10000
set_msg_config -id {Synth 8-638} -limit 10000
create_project -in_memory -part xc7k70tfbv676-1

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.cache/wt [current_project]
set_property parent.project_path E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.xpr [current_project]
set_property XPM_LIBRARIES XPM_MEMORY [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_output_repo e:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/Instructs.coe
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/mem.coe
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/slttest.coe
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/lwsw.coe
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/jmp.coe
add_files E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/coe/fib_aray.coe
read_verilog {
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/alu_src_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/alu_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/rv32i_op_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/pc_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/reg_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/mem_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/lenth_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/reg_src_control_define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/define.vh
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/define/im_wait_define.vh
}
read_verilog -library xil_defaultlib {
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Mux_alu_source.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Arithmetic_logic_unit.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Control_unit.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Frequency_multiplier.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Instruction_decoder.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Instruction_memory.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Mux_lenth.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Mux_reg_source.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Program_counter.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Register_bank.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/RSICV_CPU_top.v
  E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/module/Data_memory.v
}
read_ip -quiet E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_1/blk_mem_gen_1.xci
set_property used_in_implementation false [get_files -all e:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_1/blk_mem_gen_1_ooc.xdc]

read_ip -quiet E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_0/blk_mem_gen_0.xci
set_property used_in_implementation false [get_files -all e:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_0/blk_mem_gen_0_ooc.xdc]

read_ip -quiet E:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_2/blk_mem_gen_2.xci
set_property used_in_implementation false [get_files -all e:/vivado/riscv-32-verilog/riscv-32-cpu/riscv-32-cpu.srcs/sources_1/ip/blk_mem_gen_2/blk_mem_gen_2_ooc.xdc]

# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc dont_touch.xdc
set_property used_in_implementation false [get_files dont_touch.xdc]
set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

synth_design -top RISCV_CPU_top -part xc7k70tfbv676-1


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef RISCV_CPU_top.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file RISCV_CPU_top_utilization_synth.rpt -pb RISCV_CPU_top_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
